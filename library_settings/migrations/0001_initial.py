# Generated by Django 5.2.6 on 2025-09-28 20:56

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="FineRate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Fine Name")),
                (
                    "violation_type",
                    models.CharField(
                        choices=[
                            ("overdue", "Overdue Book"),
                            ("damaged", "Damaged Book"),
                            ("lost", "Lost Book"),
                            ("other", "Other Violation"),
                        ],
                        default="overdue",
                        max_length=20,
                        verbose_name="Violation Type",
                    ),
                ),
                (
                    "rate",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Amount to charge for this violation",
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Fine Rate",
                    ),
                ),
                (
                    "rate_type",
                    models.CharField(
                        choices=[
                            ("fixed", "Fixed Amount"),
                            ("daily", "Per Day"),
                            ("item", "Per Item"),
                        ],
                        default="fixed",
                        max_length=10,
                        verbose_name="Rate Type",
                    ),
                ),
                (
                    "max_fine",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Maximum amount that can be charged (leave blank for no limit)",
                        max_digits=10,
                        null=True,
                        verbose_name="Maximum Fine",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Fine Rate",
                "verbose_name_plural": "Fine Rates",
                "ordering": ["violation_type", "name"],
            },
        ),
        migrations.CreateModel(
            name="LibraryPolicy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Policy Name")),
                (
                    "policy_type",
                    models.CharField(
                        choices=[
                            ("borrowing", "Borrowing Policy"),
                            ("reservation", "Reservation Policy"),
                            ("membership", "Membership Policy"),
                            ("fines", "Fines Policy"),
                            ("other", "Other Policy"),
                        ],
                        default="other",
                        max_length=20,
                        verbose_name="Policy Type",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Detailed description of the policy",
                        verbose_name="Description",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Library Policy",
                "verbose_name_plural": "Library Policies",
                "ordering": ["policy_type", "name"],
            },
        ),
        migrations.CreateModel(
            name="LibrarySettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "max_borrow_days",
                    models.PositiveIntegerField(
                        default=14,
                        help_text="Maximum number of days a user can borrow a book",
                        verbose_name="Maximum Borrow Days",
                    ),
                ),
                (
                    "fine_per_day",
                    models.DecimalField(
                        decimal_places=2,
                        default=5.0,
                        help_text="Fine amount per day for overdue books",
                        max_digits=5,
                        verbose_name="Fine per Day",
                    ),
                ),
                (
                    "max_renewals",
                    models.PositiveIntegerField(
                        default=2,
                        help_text="Maximum number of times a book can be renewed",
                        verbose_name="Maximum Renewals",
                    ),
                ),
                (
                    "allow_reservation",
                    models.BooleanField(
                        default=True,
                        help_text="Whether book reservations are allowed",
                        verbose_name="Allow Reservations",
                    ),
                ),
                (
                    "branch_name",
                    models.CharField(
                        blank=True,
                        help_text="Name of the library branch (if applicable)",
                        max_length=100,
                        null=True,
                        verbose_name="Branch Name",
                    ),
                ),
                (
                    "branch_address",
                    models.TextField(
                        blank=True,
                        help_text="Address of the library branch (if applicable)",
                        null=True,
                        verbose_name="Branch Address",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Last Updated"),
                ),
            ],
            options={
                "verbose_name": "Library Setting",
                "verbose_name_plural": "Library Settings",
                "ordering": ["branch_name"],
            },
        ),
        migrations.CreateModel(
            name="NotificationTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Template Name"),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("due_soon", "Due Date Reminder"),
                            ("overdue", "Overdue Notice"),
                            ("reservation_available", "Reservation Available"),
                            ("fine_imposed", "Fine Imposed"),
                            ("membership_expiry", "Membership Expiry"),
                            ("welcome", "Welcome Email"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=30,
                        verbose_name="Notification Type",
                    ),
                ),
                (
                    "subject",
                    models.CharField(max_length=200, verbose_name="Email Subject"),
                ),
                (
                    "body",
                    models.TextField(
                        help_text="You can use variables like {{user}}, {{book}}, {{due_date}}, etc.",
                        verbose_name="Email Body",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Notification Template",
                "verbose_name_plural": "Notification Templates",
                "ordering": ["notification_type", "name"],
            },
        ),
        migrations.CreateModel(
            name="LibraryBranch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Branch Name"
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Short code for the branch (e.g., MAIN, WEST, EAST)",
                        max_length=10,
                        unique=True,
                        verbose_name="Branch Code",
                    ),
                ),
                (
                    "address",
                    models.TextField(
                        help_text="Full address of the library branch",
                        verbose_name="Address",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        verbose_name="Phone Number",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Email Address",
                    ),
                ),
                (
                    "opening_hours",
                    models.TextField(
                        blank=True,
                        help_text="Regular opening hours (e.g., Mon-Fri: 9AM-6PM, Sat: 10AM-4PM)",
                        null=True,
                        verbose_name="Opening Hours",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "manager",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="managed_branches",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Branch Manager",
                    ),
                ),
            ],
            options={
                "verbose_name": "Library Branch",
                "verbose_name_plural": "Library Branches",
                "ordering": ["name"],
            },
        ),
    ]
